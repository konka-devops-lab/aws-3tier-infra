name: CI/CD for 3-tier Architecture Destroy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (e.g., development, production)'
        required: true
        default: 'development'

jobs:
  plan:
    name: Terraform Plan
    runs-on: self-hosted
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Cache Terraform Plugin Directory
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}

      - name: Terraform Init with Backend Config
        env:
          TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache
        run: |
          terraform init -backend-config=./environments/${{ github.event.inputs.environment }}/backend.tfvars
        
      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file=./environments/${{ github.event.inputs.environment }}/main.tfvars -out=tfplan
  destroy:
    name: Terraform Apply (Needs Approval)
    runs-on: self-hosted
    needs: plan
    environment:
      name: development
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Cache Terraform Plugin Directory
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}


      - name: Terraform Init with Backend Config
        env:
          TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache
        run:  |
          terraform init -backend-config=./environments/${{ github.event.inputs.environment }}/backend.tfvars
        
      - name: Terraform Apply
        run: terraform destroy -var-file=./environments/${{ github.event.inputs.environment }}/main.tfvars -auto-approve
